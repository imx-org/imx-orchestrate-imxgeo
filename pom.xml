<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dotwebstack.orchestrate</groupId>
    <artifactId>orchestrate-imxgeo</artifactId>
    <packaging>jar</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <slf4j.version>2.0.7</slf4j.version>
        <lombok.version>1.18.26</lombok.version>
        <jackson.version>2.14.2</jackson.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <spring-boot.version>3.0.5</spring-boot.version>
        <spring-graphql.version>1.1.3</spring-graphql.version>
        <micrometer.version>1.11.1</micrometer.version>
        <orchestrate.version>0.0.1-SNAPSHOT</orchestrate.version>
        <orchestrate-mim.version>0.0.1-SNAPSHOT</orchestrate-mim.version>
        <mim-sdk.version>0.21-SNAPSHOT</mim-sdk.version>
        <gdc-orchestrate.version>0.0.1-SNAPSHOT</gdc-orchestrate.version>
        <orchestrate-ogcapi.version>0.0.1-SNAPSHOT</orchestrate-ogcapi.version>
        <junit.version>5.9.2</junit.version>
        <assertj.version>3.24.2</assertj.version>
        <mockito.version>5.2.0</mockito.version>
        <jacoco-maven-plugin.version>0.8.9</jacoco-maven-plugin.version>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
        <sonar.organization>dotwebstack</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../report-aggregate/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
        <!-- Dummy property to avoid JVM startup error in IDEs -->
        <surefire.jacoco.args/>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.dotwebstack.orchestrate</groupId>
            <artifactId>orchestrate-engine</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dotwebstack.orchestrate</groupId>
            <artifactId>orchestrate-gateway</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dotwebstack.orchestrate</groupId>
            <artifactId>orchestrate-ext-spatial</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dotwebstack.orchestrate</groupId>
            <artifactId>orchestrate-parser-yaml</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dotwebstack.orchestrate</groupId>
            <artifactId>orchestrate-source-file</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.dotwebstack.orchestrate</groupId>
            <artifactId>orchestrate-mim</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.kadaster.dhub.mim</groupId>
            <artifactId>mim-model</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.kadaster.dhub.mim</groupId>
            <artifactId>mim-parser-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.kadaster.gdc</groupId>
            <artifactId>source-graphql</artifactId>
        </dependency>
        <dependency>
            <groupId>de.interactive-instruments.orchestrate</groupId>
            <artifactId>orchestrate-ogcapi</artifactId>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-graphql</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dotwebstack.orchestrate</groupId>
                <artifactId>orchestrate-engine</artifactId>
                <version>${orchestrate.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dotwebstack.orchestrate</groupId>
                <artifactId>orchestrate-ext-spatial</artifactId>
                <version>${orchestrate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dotwebstack.orchestrate</groupId>
                <artifactId>orchestrate-parser-yaml</artifactId>
                <version>${orchestrate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dotwebstack.orchestrate</groupId>
                <artifactId>orchestrate-source-file</artifactId>
                <version>${orchestrate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dotwebstack.orchestrate</groupId>
                <artifactId>orchestrate-mim</artifactId>
                <version>${orchestrate-mim.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.kadaster.dhub.mim</groupId>
                <artifactId>mim-model</artifactId>
                <version>${mim-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.kadaster.dhub.mim</groupId>
                <artifactId>mim-parser-xml</artifactId>
                <version>${mim-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.kadaster.gdc</groupId>
                <artifactId>source-graphql</artifactId>
                <version>${gdc-orchestrate.version}</version>
            </dependency>
            <dependency>
                <groupId>de.interactive-instruments.orchestrate</groupId>
                <artifactId>orchestrate-ogcapi</artifactId>
                <version>${gdc-orchestrate.version}</version>
            </dependency>
            <!-- Test dependencies -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.graphql</groupId>
                <artifactId>spring-graphql-test</artifactId>
                <version>${spring-graphql.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <argLine>@{surefire.jacoco.args}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>surefire.jacoco.args</propertyName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
